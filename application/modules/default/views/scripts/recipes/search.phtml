<?php
$this->headTitle()->headTitle("Paieška");
?>
<?
$this->headScript()->appendFile("/public/ui/ui/jquery.ui.core.js");
$this->headScript()->appendFile("/public/ui/ui/jquery.ui.autocomplete.js");
$this->headLink()->appendStylesheet("/public/ui/themes/pepper-grinder/jquery.ui.autocomplete.css");
?>
<style> 
	.ui-autocomplete-loading { background: white url('/public/images/spinner.gif') right center no-repeat; }
</style> 
<script>
	function split( val ) {
		return val.split( /,\s*/ );
	}
	function extractLast( term ) {
			
		return split( term ).pop();
	}
	$(function() {
		$("#search_mine_buttn").click(function(){
			$("#search_mine").val("1");
			submitForm();
		});
		$("#show_empty_recipes").change(function(){
			if ($("#show_empty_recipes").attr("checked") == true){
				window.location.href = "/show_empty_recipes_on";
			} else {
				window.location.href = "/show_empty_recipes_off";
			}
		});
		// don't navigate away from the field on tab when selecting an item
		$("#hops").bind("keydown", function (event) {
			if (event.keyCode === 9 && $(this).data("autocomplete").menu.active) {
				event.preventDefault();
			}
		});

		$("#hops").autocomplete({source:function (request, response) {
				$.getJSON("/recipes/find?hops", {term:extractLast(request.term)}, response);
			}, search:function () {
				// custom minLength
				var term = extractLast(this.value);
				if (term.length < 2) {
					return false;
				}
			}, focus:function () {
				// prevent value inserted on focus
				return false;
			}, select:function (event, ui) {
				var terms = split(this.value);
				// remove the current input
				terms.pop();
				// add the selected item
				terms.push(ui.item.value);
				// add placeholder to get the comma-and-space at the end
				var lastOne = $.trim(terms[terms.length - 1]);
				var i = 0;
				while (i < terms.length - 1) {
					if ($.trim(terms[i]) == lastOne) {
						terms.splice(i, 1);
					} else {
						i++;
					}
				}
				terms.push("");
				this.value = terms.join(", ");
				return false;
			}});
		$("#malts").bind("keydown", function (event) {
			if (event.keyCode === 9 && $(this).data("autocomplete").menu.active) {
				event.preventDefault();
			}
		});

		$("#malts").autocomplete({source:function (request, response) {
				$.getJSON("/recipes/find?malts", {term:extractLast(request.term)}, response);
			}, search:function () {
				// custom minLength
				var term = extractLast(this.value);
				if (term.length < 2) {
					return false;
				}
			}, focus:function () {
				// prevent value inserted on focus
				return false;
			}, select:function (event, ui) {
				var terms = split(this.value);
				// remove the current input
				terms.pop();
				// add the selected item
				terms.push(ui.item.value);
				// add placeholder to get the comma-and-space at the end
				var lastOne = $.trim(terms[terms.length - 1]);
				var i = 0;
				while (i < terms.length - 1) {
					if ($.trim(terms[i]) == lastOne) {
						terms.splice(i, 1);
					} else {
						i++;
					}
				}
				terms.push("");
				this.value = terms.join(", ");
				return false;
			}});
		//
		$("#tags").bind("keydown", function (event) {
			if (event.keyCode === 9 && $(this).data("autocomplete").menu.active) {
				event.preventDefault();
			}
		});

		$("#tags").autocomplete({source:function (request, response) {
				$.getJSON("/recipes/find?tags", {term:extractLast(request.term)}, response);
			}, search:function () {
				// custom minLength
				var term = extractLast(this.value);
				if (term.length < 2) {
					return false;
				}
			}, focus:function () {
				// prevent value inserted on focus
				return false;
			}, select:function (event, ui) {
				var terms = split(this.value);
				// remove the current input
				terms.pop();
				// add the selected item
				terms.push(ui.item.value);
				// add placeholder to get the comma-and-space at the end
				var lastOne = $.trim(terms[terms.length - 1]);
				var i = 0;
				while (i < terms.length - 1) {
					if ($.trim(terms[i]) == lastOne) {
						terms.splice(i, 1);
					} else {
						i++;
					}
				}
				terms.push("");
				this.value = terms.join(", ");
				return false;
			}});
		//
		$("#yeasts").bind("keydown", function (event) {
			if (event.keyCode === 9 && $(this).data("autocomplete").menu.active) {
				event.preventDefault();
			}
		});

		$("#yeasts").autocomplete({source:function (request, response) {
				$.getJSON("/recipes/find?yeasts", {term:extractLast(request.term)}, response);
			}, search:function () {
				// custom minLength
				var term = extractLast(this.value);
				if (term.length < 2) {
					return false;
				}
			}, focus:function () {
				// prevent value inserted on focus
				return false;
			}, select:function (event, ui) {
				var terms = split(this.value);
				// remove the current input
				terms.pop();
				// add the selected item
				terms.push(ui.item.value);
				// add placeholder to get the comma-and-space at the end
				var lastOne = $.trim(terms[terms.length - 1]);
				var i = 0;
				while (i < terms.length - 1) {
					if ($.trim(terms[i]) == lastOne) {
						terms.splice(i, 1);
					} else {
						i++;
					}
				}
				terms.push("");
				this.value = terms.join(", ");
				return false;
			}});
	})

	function submitForm() {
		var filter = [];
		
		var rn = $('#recipe_name').val();
		if (rn.length > 0){
			filter.push("name:"+encodeURIComponent(rn));
		}
		
		var rs = $('#recipe_style').val();
		if (rs != 0){
			filter.push("style:"+rs);
		}
		
		var rt = $('#recipe_type').val();
		if (rt != 0) {
			filter.push("type:"+rt);
		}
		
		var hp = $('#hops').val();
		if (hp.length) {
			filter.push("hops:"+encodeURIComponent(hp));
		}
		
		var hp = $('#malts').val();
		if (hp.length) {
			filter.push("malts:"+encodeURIComponent(hp));
		}
		
		var hp = $('#yeasts').val();
		if (hp.length) {
			filter.push("yeasts:"+encodeURIComponent(hp));
		}
		
		var hp = $('#tags').val();
		if (hp.length) {
			filter.push("tags:"+encodeURIComponent(hp));
		}
		
		var hp = $('#brewer').val();
		if (hp.length) {
			filter.push("brewer:"+encodeURIComponent(hp));
		}

		if ($("#search_mine").val() == "1") {
			filter.push("mine:1");
		}
		
		if ($("#medals").attr("checked")) {
			filter.push("medals:1");
		}

		if (filter.length) {
			$('#search_form')[0].action="/search/"+filter.join("|");
			$('#search_form')[0].submit()
		} else {
			alert("Nepasirinkote paieškos filtro");
		}
	}
</script>

<div class="inner_container" id="search_container">
	<div class="inner_header">Paieška</div>
	<form onSubmit="submitForm();return false;" id="search_form">
		<dl>
			<dt>Recepto pavadinimas:</dt>
			<dd><input type="text" id="recipe_name" value="<?= $this->filter_values['recipe_name']; ?>"/></dd>
			<div class="clear"></div>
		</dl>
		<dl>
			<dt>Recepto stilius:</dt>
			<dd>
				<select id="recipe_style">
					<option value="0">Nefiltruot</option>
					<?php
					foreach ($this->beer_styles as $style):
						$selected = ($this->filter_values['recipe_style'] == $style["style_id"]) ? "selected" : "";
						?>
						<option value="<?= $style["style_id"]; ?>" <?= $selected; ?>>
							<?= $style["style_name"]; ?> (<?= $style["count"]; ?>)
						</option>
					<?php
					endforeach;
					?>
				</select>
			</dd>
			<div class="clear"></div>
		</dl>
		<dl>
			<dt>Recepto tipas:</dt>
			<dd>
				<select id="recipe_type" >
					<option value="0">Nefiltruot</option>
					<?
					$this->beer_types = array();
					$this->beer_types[] = array('beer_type' => "grain", "beer_type_name" => "Iš salyklo");
					$this->beer_types[] = array('beer_type' => "partial", "beer_type_name" => "Iš ekstrakto");
					foreach ($this->beer_types as $type):
						$selected = ($type['beer_type'] == strval($this->filter_values['recipe_type'])) ? "selected" : "";
						?>
						<option value="<?= $type["beer_type"]; ?>" <?= $selected; ?>><?= $type["beer_type_name"]; ?></option>
					<?
					endforeach;
					?>
				</select>
			</dd>
			<div class="clear"></div>
		</dl>
		<dl>
			<dt>Aludaris:</dt>
			<dd><input type="text" id="brewer" value="<?= $this->filter_values['user_name']; ?>" /></dd>
			<div class="clear"></div>
		</dl>
		<dl>
			<dt>Apyniai:</dt>
			<dd><input type="text" id="hops" value="<?= $this->filter_values['hop_name']; ?>" /></dd>
			<div class="clear"></div>
		</dl>
		<dl>
			<dt>Salyklas:</dt>
			<dd><input type="text" id="malts" value="<?= $this->filter_values['malt_name']; ?>" /></dd>
			<div class="clear"></div>
		</dl>
		<dl>
			<dt>Mielės:</dt>
			<dd><input type="text" id="yeasts" value="<?= $this->filter_values['yeast_name']; ?>" /></dd>
			<div class="clear"></div>
		</dl>
		<dl>
			<dt>Žymos:</dt>
			<dd><input type="text" id="tags" value="<?= $this->filter_values['tag_text']; ?>" /></dd>
			<div class="clear"></div>
		</dl>
		<dl>
			<dt>&nbsp;</dt>
			<dd><input type="checkbox" id="medals" value="1" <?=($this->filter_values['medals'] == "1") ? "checked='checked'" : ""; ?> /> <label for="medals">Rodyti tik receptus su apdovanojimais</label></dd>
			<div class="clear"></div>
		</dl>
		<dl>
			<dt>&nbsp;</dt>
			<dd style="text-align: right;">
				<input type="submit" value="Ieškoti" class="ui-button" />
				<?php
				if ($this->uid != 0):
					?>
					<input type="hidden" value="search_mine" value="0" id="search_mine" />
					<input type="button" value="Ieškoti tarp mano receptų" class="ui-button" id="search_mine_buttn" />
					<?php
				endif;
				?>
			</dd>
			<div class="clear"></div>
		</dl>
	</form>
</div>

<?php
if (isset($this->content)) {
	?>
	<div class="inner_container" id="search_result_container">
		<div class="inner_header">
			Paieškos rezultatai
		</div>
		<?php
		if ($this->hidden_recipes > 0):
			?>
			<div style="margin-bottom: 10px;">
				<label><input type="checkbox" value="1" name="show_empty_recipes" id="show_empty_recipes" <?=(isset($_COOKIE['show_empty_recipes']) && $_COOKIE['show_empty_recipes'] == "1") ? 'checked="checked"' : ''; ?>> Rodyti receptus be užregistruotų virimų (<?=$this->hidden_recipes?> <?=$this->plurify($this->hidden_recipes, "receptas", "receptai", "receptų")?>)</label>
			</div>
			<?php
		endif;
		if (isset($this->filter_values['tag_text']) && !empty($this->filter_values['tag_text'])){
			?>
			<div style="height: 0px; overflow: hidden;">
				<h1><?=$this->filter_values['tag_text'];?></h1>
			</div>
			<?
		}
		?>
		<div class="style_recipes">
			<?php
			$i = 0;
			foreach ($this->content as $item):
				$i++;
			?>
				<div class="style_recipe">
					<?= $this->recipeItem($item); ?>
				</div>
			<?php
				if ($i == 3){
					$i = 0;
					?>
					<div class="clear"></div>
					<?php
				}
			endforeach;
			?>
			<div class="clear"></div>
		</div>		
		<?php
		echo $this->paginationControl($this->content, 'Sliding', 'paginator/item.phtml');
		?>
	</div>
	<?php
}
?>