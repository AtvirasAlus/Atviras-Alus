<?
$this->headTitle()->append(" - Paieška");
$this->headMeta()->setName('keywords', 'apyniai, mielės, salyklas,alaus stiliai,alaus gamyba,naminis,receptai,receptas,alus,paieška');
$this->headScript()->appendFile("/public/ui/ui/jquery.ui.core.js");
$this->headScript()->appendFile("/public/ui/ui/jquery.ui.autocomplete.js");
$this->headLink()->appendStylesheet("/public/ui/themes/pepper-grinder/jquery.ui.autocomplete.css");
?>
<style> 
	.ui-autocomplete-loading { background: white url('/public/images/spinner.gif') right center no-repeat; }
	</style> 
<script>
function split( val ) {
			return val.split( /,\s*/ );
		}
		function extractLast( term ) {
			
			return split( term ).pop();
		}
$(function() {
			// don't navigate away from the field on tab when selecting an item
			$("#hops").bind("keydown", function (event) {
				if (event.keyCode === 9 && $(this).data("autocomplete").menu.active) {
					event.preventDefault();
				}
			});

			$("#hops").autocomplete({source:function (request, response) {
				$.getJSON("/recipes/find?hops", {term:extractLast(request.term)}, response);
			}, search:function () {
				// custom minLength
				var term = extractLast(this.value);
				if (term.length < 2) {
					return false;
				}
			}, focus:function () {
				// prevent value inserted on focus
				return false;
			}, select:function (event, ui) {
				var terms = split(this.value);
				// remove the current input
				terms.pop();
				// add the selected item
				terms.push(ui.item.value);
				// add placeholder to get the comma-and-space at the end
				var lastOne = $.trim(terms[terms.length - 1]);
				var i = 0;
				while (i < terms.length - 1) {
					if ($.trim(terms[i]) == lastOne) {
						terms.splice(i, 1);
					} else {
						i++;
					}
				}
				terms.push("");
				this.value = terms.join(", ");
				return false;
			}});
			$("#malts").bind("keydown", function (event) {
				if (event.keyCode === 9 && $(this).data("autocomplete").menu.active) {
					event.preventDefault();
				}
			});

			$("#malts").autocomplete({source:function (request, response) {
				$.getJSON("/recipes/find?malts", {term:extractLast(request.term)}, response);
			}, search:function () {
				// custom minLength
				var term = extractLast(this.value);
				if (term.length < 2) {
					return false;
				}
			}, focus:function () {
				// prevent value inserted on focus
				return false;
			}, select:function (event, ui) {
				var terms = split(this.value);
				// remove the current input
				terms.pop();
				// add the selected item
				terms.push(ui.item.value);
				// add placeholder to get the comma-and-space at the end
				var lastOne = $.trim(terms[terms.length - 1]);
				var i = 0;
				while (i < terms.length - 1) {
					if ($.trim(terms[i]) == lastOne) {
						terms.splice(i, 1);
					} else {
						i++;
					}
				}
				terms.push("");
				this.value = terms.join(", ");
				return false;
			}});
			//
			$("#tags").bind("keydown", function (event) {
				if (event.keyCode === 9 && $(this).data("autocomplete").menu.active) {
					event.preventDefault();
				}
			});

			$("#tags").autocomplete({source:function (request, response) {
				$.getJSON("/recipes/find?tags", {term:extractLast(request.term)}, response);
			}, search:function () {
				// custom minLength
				var term = extractLast(this.value);
				if (term.length < 2) {
					return false;
				}
			}, focus:function () {
				// prevent value inserted on focus
				return false;
			}, select:function (event, ui) {
				var terms = split(this.value);
				// remove the current input
				terms.pop();
				// add the selected item
				terms.push(ui.item.value);
				// add placeholder to get the comma-and-space at the end
				var lastOne = $.trim(terms[terms.length - 1]);
				var i = 0;
				while (i < terms.length - 1) {
					if ($.trim(terms[i]) == lastOne) {
						terms.splice(i, 1);
					} else {
						i++;
					}
				}
				terms.push("");
				this.value = terms.join(", ");
				return false;
			}});
			//
			$("#yeasts").bind("keydown", function (event) {
				if (event.keyCode === 9 && $(this).data("autocomplete").menu.active) {
					event.preventDefault();
				}
			});

			$("#yeasts").autocomplete({source:function (request, response) {
				$.getJSON("/recipes/find?yeasts", {term:extractLast(request.term)}, response);
			}, search:function () {
				// custom minLength
				var term = extractLast(this.value);
				if (term.length < 2) {
					return false;
				}
			}, focus:function () {
				// prevent value inserted on focus
				return false;
			}, select:function (event, ui) {
				var terms = split(this.value);
				// remove the current input
				terms.pop();
				// add the selected item
				terms.push(ui.item.value);
				// add placeholder to get the comma-and-space at the end
				var lastOne = $.trim(terms[terms.length - 1]);
				var i = 0;
				while (i < terms.length - 1) {
					if ($.trim(terms[i]) == lastOne) {
						terms.splice(i, 1);
					} else {
						i++;
					}
				}
				terms.push("");
				this.value = terms.join(", ");
				return false;
			}});
})

function submitForm() {
	var rn=$('#recipe_name').val()
	var filter=[]
	if (rn.length>0) {
		
		filter.push("name:"+encodeURIComponent(rn))
	}
	var rs=$('#recipe_style').val();
	if (rs!=0) {
		filter.push("style:"+rs)
	}
	var rt=$('#recipe_type').val();
	if (rt!=0) {
		filter.push("type:"+rt)
	}
	var hp=$('#hops').val()
	if (hp.length) {
		filter.push("hops:"+encodeURIComponent(hp))
	}
	var hp=$('#malts').val()
	if (hp.length) {
		filter.push("malts:"+encodeURIComponent(hp))
	}
	var hp=$('#yeasts').val()
	if (hp.length) {
		filter.push("yeasts:"+encodeURIComponent(hp))
	}
	var hp=$('#tags').val()
	if (hp.length) {
		filter.push("tags:"+encodeURIComponent(hp))
	}
	var hp=$('#brewer').val()
	if (hp.length) {
		filter.push("brewer:"+encodeURIComponent(hp))
	}
	if (filter.length) {
		$('#search_form')[0].action="/search/"+filter.join("|");
		$('#search_form')[0].submit()
	}else{
		alert("Nepasirinkote paieškos filtro");
	}
	
}
</script>
<div class="ui-corner-all" style="background:#FFFFFF;width:800;padding:10;">
<h1>Paieška:</h1>
<div class="ui-corner-all" style="background:#F1F0ED;width:95%;padding:10;border:1px solid #dedede">
<form onSubmit="submitForm();return false;" id="search_form">
<table width="100%">
<tr><td>Recepto pavadinimas:</td><td><input type="text"  style="width:100%;border:1px solid #dedede" id="recipe_name" class="ui-corner-all" value="<?=$this->filter_values['recipe_name'];?>"/></td>
</tr>
<tr><td>Recepto stilius:</td><td><select id="recipe_style"  style="width:100%;border:1px solid #dedede"><option value="0">Nefiltruot</option>
<? for ($i=0;$i<count($this->beer_styles);$i++) {
	$selected=($this->filter_values['recipe_style']==$this->beer_styles[$i]["style_id"]) ? "selected" : "";?>
	<option value="<?=$this->beer_styles[$i]["style_id"];?>" <?=$selected;?>><?=$this->beer_styles[$i]["style_name"];?> (<?=$this->beer_styles[$i]["count"];?>)</option>
<?}?>
</select></td>
</tr>
<tr><td>Recepto tipas:</td><td><select id="recipe_type"  style="width:100%;border:1px solid #dedede">
<option value="0">Nefiltruot</option>
<?
$this->beer_types=array();
$this->beer_types[]=array('beer_type'=>"grain","beer_type_name"=>"Iš salyklo");
$this->beer_types[]=array('beer_type'=>"partial","beer_type_name"=>"Iš ekstrakto");
for ($i=0;$i<count($this->beer_types);$i++) {
	$selected=($this->beer_types[$i]['beer_type']==strval($this->filter_values['recipe_type'])) ? "selected" : "";?>
	<option value="<?=$this->beer_types[$i]["beer_type"];?>" <?=$selected;?>><?=$this->beer_types[$i]["beer_type_name"];?></option>
<?}?>

</select></td>
</tr>
<tr><td>Aludaris:</td><td><input id="brewer"  style="width:100%;border:1px solid #dedede" class="ui-corner-all" value="<?=$this->filter_values['user_name'];?>"/> </td></tr>
<tr><td>Apyniai:</td><td><input id="hops"  style="width:100%;border:1px solid #dedede" class="ui-corner-all" value="<?=$this->filter_values['hop_name'];?>"/> </td></tr>
<tr><td>Salyklas:</td><td><input id="malts"  style="width:100%;border:1px solid #dedede" class="ui-corner-all" value="<?=$this->filter_values['malt_name'];?>"/> </td></tr>
<tr><td>Mielės:</td><td><input id="yeasts"  style="width:100%;border:1px solid #dedede" class="ui-corner-all" value="<?=$this->filter_values['yeast_name'];?>"/> </td></tr>
<tr><td>Žymos:</td><td><input id="tags"  style="width:100%;border:1px solid #dedede" class="ui-corner-all" value="<?=$this->filter_values['tag_text'];?>"/> </td></tr>
<tr><td></td><td align="right"><input type="submit" value="Ieškot" style="border:1px solid #dedede"  class="ui-corner-all"/></td>
</tr>
</table>
</form>
</div>
<?
if (isset($this->content)) {?>
<div style="padding:10">
Paieškos rezultatai:

<table>
<?
$z=0;
$r=0;
$u_per_row=3;
foreach ($this->content as $item) {?>
<? if ($r==0){?>
	
	<tr>
	<?}?>
	<?
	$r++;
	?>
<td width="280" align="left" style="padding:3">
<div class="ui-corner-all" style="background:#ffffff">
<?=$this->recipeItem($item);?>
</div>
</td>
<?
		
$z++;

if ($r==$u_per_row) {?>
</tr>
<?
$r=0;
}
}
if ($r>0) {
?>
</tr>
<?
}   
?>  
   
</table>
<? if ($z==0) {
	?>
	<p>Nieko nerasta</p>
	<?
}
?>
<?php echo $this->paginationControl($this->content,
                                    'Sliding',
                                    'paginator/item.phtml'); ?>
</div>
<?}?>
</div>
